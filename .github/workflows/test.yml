name: Deploy test
on:
  push:
    branches:
      - test

jobs:
  generate-release:
    # Don't rerun
    if: ${{ !contains(github.event.head_commit.message, 'changeset-release')}}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      CI: true
      PNPM_CACHE_FOLDER: .pnpm-store
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
      
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.3
        with:
          version: 7.1.9

      - uses: actions/setup-node@v3
        with:
          node-version: '18.17.0'
          cache: pnpm

      - name: install frozen deps
        run: pnpm install

      - name: create and publish versions
        id: publish-version
        uses: changesets/action@v1
        with:
          commit: 'chore: update versions'
          title: 'chore: update versions'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      pull-request-number: ${{ steps.publish-version.outputs.pullRequestNumber }}

  send-slack-message:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [generate-release]
    if: needs.generate-release.outputs.pull-request-number
    steps:
      - uses: octokit/request-action@v2.x
        id: get-pr
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ needs.generate-release.outputs.pull-request-number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: print pr
        run: echo "${{ fromJson(steps.get-pr.outputs.data).body }}"
